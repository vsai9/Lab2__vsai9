setting auto_restore_mw_cel_lib_setup true
Initializing gui preferences from file  /u/sai9/.synopsys_dv_prefs.tcl
dc_shell> 
dc_shell> 
dc_shell> set top_design fifo1_srama
fifo1_srama
dc_shell> source ../scripts/dc.tcl
set lib_dir /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib
# Decoder ring for the libraries
# You will need to follow another example or look in the library directories to understand.
# lib_types is used for the dc/dct linking variables and ICC2 NDM lcoations.
# /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/db_nldm
# /          $lib_dir                   /lib/ $lib_type /db_nldm
# link_library, Target_library use the sub_lib_types and corner variables. 
# For sub_lib_types and corner:
# Example:
#     saed32hvt_ss0p75v125c.db
#     |sub_lib  corner    .db
# The current flow tries to find all sub_lib and all corners in all the search paths.  Any match will be put in the library list.
# Wild cards can be used, but be careful.  Multiple matches can occur in ways you don't want.
# For the target library, the same method is used as the link library except only HVT and RVT lib_types are used.
# ICC2 NDM choosing also uses the sub_lib_types so that only the required libraries and extras are not loaded.
# fifo1
#set top_design fifo1
set add_ios 1
1
set pad_design 1
1
set design_size { 580 580  } 
 580 580  
set design_io_border 310
310
set dc_floorplanning 1
1
set enable_dft 0
0
set innovus_enable_manual_macro_placement 0
0
set rtl_list [list ../rtl/$top_design.sv ]
../rtl/fifo1_srama.sv
set slow_corner "ss0p95v125c_2p25v ss0p95v125c ss0p75v125c_i0p75v"
ss0p95v125c_2p25v ss0p95v125c ss0p75v125c_i0p75v
set fast_corner "ff0p95vn40c ff1p16vn40c_2p75v ff1p16vn40c"
ff0p95vn40c ff1p16vn40c_2p75v ff1p16vn40c
set synth_corners $slow_corner
ss0p95v125c_2p25v ss0p95v125c ss0p75v125c_i0p75v
set synth_corners_target "ss0p95v125c" 
ss0p95v125c
#set synth_corners_target "ss0p95v125c" 
set synth_corners_slow $slow_corner
ss0p95v125c_2p25v ss0p95v125c ss0p75v125c_i0p75v
set synth_corners_fast $fast_corner
ff0p95vn40c ff1p16vn40c_2p75v ff1p16vn40c
set slow_metal Cmax_125
Cmax_125
set fast_metal Cmax_125
Cmax_125
set lib_types "$lib_dir/io_std/db_nldm $lib_dir/sram_lp/db_nldm $lib_dir/pll/db_nldm"
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram_lp/db_nldm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/db_nldm
set ndm_types "$lib_dir/stdcell_rvt/ndm $lib_dir/stdcell_hvt/ndm $lib_dir/sram_lp/ndm $lib_dir/io_std/ndm  $lib_dir/pll/ndm"
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram_lp/ndm /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/ndm  /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/ndm
set lib_types_target "$lib_dir/stdcell_rvt/db_nldm"
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm
# Get just the main standard cells, sram_lps and IOs
set sub_lib_type "saed32?vt_ saed32sramlp_ saed32io_wb_ saed32pll_"
saed32?vt_ saed32sramlp_ saed32io_wb_ saed32pll_
set sub_lib_type_target "saed32rvt_"
saed32rvt_
set lef_types [list $lib_dir/stdcell_hvt/lef  $lib_dir/stdcell_rvt/lef $lib_dir/stdcell_lvt/lef $lib_dir/sram_lp/lef/ $lib_dir/io_std/lef $lib_dir/pll/lef ]
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/lef /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/lef /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/lef /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram_lp/lef/ /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/lef /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/lef
set sub_lef_type "saed32nm_?vt_*.lef saed32_sram_lp_*.lef saed32io_std_wb saed32_PLL.lef"
saed32nm_?vt_*.lef saed32_sram_lp_*.lef saed32io_std_wb saed32_PLL.lef
set mwlib_types [list $lib_dir/stdcell_hvt/milkyway $lib_dir/stdcell_rvt/milkyway $lib_dir/stdcell_lvt/milkyway  $lib_dir/io_std/milkyway $lib_dir/sram_lp/milkyway $lib_dir/pll/milkyway  ]
/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_hvt/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_lvt/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram_lp/milkyway /pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/milkyway
set sub_mwlib_type "saed32nm_?vt_* SRAM32NM saed32io_wb_* SAED32_PLL_FR*"
saed32nm_?vt_* SRAM32NM saed32io_wb_* SAED32_PLL_FR*
#set topdir /u/$env(USER)/PSU_RTL2GDS
set topdir [ lindex [ regexp -inline "(.*)\(syn\|pt\|apr\)" [pwd] ] 1 ]
/u/sai9/ECE581-2023/lab2-vsai9/
set FCL 0
0
set split_constraints 0
0
Warning: No designs to list. (UID-275)
== ANALYZE autoread all files ==

Starting ANALYZE autoread mode...
Warning: Defining design library 'WORK' at directory '/u/sai9/ECE581-2023/lab2-vsai9/syn/work/WORK_autoread'. (AUTOREAD-107)
Information: Adding '/u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv'.  (AUTOREAD-100)
Information: Scanning file { fifo1_srama.sv }. (AUTOREAD-303)
Compiling source file /u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv
Presto compilation completed successfully.
Autoread command completed successfully.
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/db_nldm/saed32io_wb_ss0p95v125c_2p25v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram_lp/db_nldm/saed32sramlp_ss0p75v125c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/db_nldm/saed32pll_ss0p95v125c_2p25v.db'
Loading db file '/pkgs/synopsys/2020/design_compiler/syn/Q-2019.12-SP3/libraries/syn/dw_foundation.sldb'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm/saed32rvt_ss0p95v125c.db'
Loading db file '/pkgs/synopsys/2020/design_compiler/syn/Q-2019.12-SP3/libraries/syn/gtech.db'
Loading db file '/pkgs/synopsys/2020/design_compiler/syn/Q-2019.12-SP3/libraries/syn/standard.sldb'
  Loading link library 'saed32io_wb_ss0p95v125c_2p25v'
  Loading link library 'saed32sramlp_ss0p75v125c_i0p75v'
  Loading link library 'saed32pll_ss0p95v125c_2p25v'
  Loading link library 'saed32rvt_ss0p95v125c'
  Loading link library 'gtech'
Running PRESTO HDLC

Inferred memory devices in process
        in routine fifo1_srama line 19 in file
                '/u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|      wdata_reg      | Flip-flop |   8   |  Y  | N  | Y  | N  | N  | N  | N  |
===============================================================================
Presto compilation completed successfully. (fifo1_srama)
Elaborated 1 design.
Current design is now 'fifo1_srama'.
Information: Building the design 'sync_r2w'. (HDL-193)

Inferred memory devices in process
        in routine sync_r2w line 145 in file
                '/u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|    wq2_rptr_reg     | Flip-flop |  11   |  Y  | N  | Y  | N  | N  | N  | N  |
|    wq1_rptr_reg     | Flip-flop |  11   |  Y  | N  | Y  | N  | N  | N  | N  |
===============================================================================
Presto compilation completed successfully. (sync_r2w)
Information: Building the design 'sync_w2r'. (HDL-193)

Inferred memory devices in process
        in routine sync_w2r line 156 in file
                '/u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|    rq2_wptr_reg     | Flip-flop |  11   |  Y  | N  | Y  | N  | N  | N  | N  |
|    rq1_wptr_reg     | Flip-flop |  11   |  Y  | N  | Y  | N  | N  | N  | N  |
===============================================================================
Presto compilation completed successfully. (sync_w2r)
Information: Building the design 'fifomem' instantiated from design 'fifo1_srama' with
        the parameters "8,10". (HDL-193)
Warning:  /u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv:71: DEFAULT branch of CASE statement cannot be reached. (ELAB-311)
Warning:  /u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv:86: DEFAULT branch of CASE statement cannot be reached. (ELAB-311)

Statistics for case statements in always block at line 69 in file
        '/u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv'
===============================================
|           Line           |  full/ parallel  |
===============================================
|            71            |    auto/auto     |
===============================================

Statistics for case statements in always block at line 84 in file
        '/u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv'
===============================================
|           Line           |  full/ parallel  |
===============================================
|            86            |    auto/auto     |
===============================================
Presto compilation completed successfully. (fifomem_DATASIZE8_ADDRSIZE10)
Information: Building the design 'rptr_empty' instantiated from design 'fifo1_srama' with
        the parameters "10". (HDL-193)

Inferred memory devices in process
        in routine rptr_empty_ADDRSIZE10 line 175 in file
                '/u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|      rbin_reg       | Flip-flop |  11   |  Y  | N  | Y  | N  | N  | N  | N  |
|      rptr_reg       | Flip-flop |  11   |  Y  | N  | Y  | N  | N  | N  | N  |
===============================================================================

Inferred memory devices in process
        in routine rptr_empty_ADDRSIZE10 line 186 in file
                '/u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|     rempty_reg      | Flip-flop |   1   |  N  | N  | N  | Y  | N  | N  | N  |
===============================================================================
Presto compilation completed successfully. (rptr_empty_ADDRSIZE10)
Information: Building the design 'wptr_full' instantiated from design 'fifo1_srama' with
        the parameters "10". (HDL-193)

Inferred memory devices in process
        in routine wptr_full_ADDRSIZE10 line 203 in file
                '/u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|      wbin_reg       | Flip-flop |  11   |  Y  | N  | Y  | N  | N  | N  | N  |
|      wptr_reg       | Flip-flop |  11   |  Y  | N  | Y  | N  | N  | N  | N  |
===============================================================================

Inferred memory devices in process
        in routine wptr_full_ADDRSIZE10 line 218 in file
                '/u/sai9/ECE581-2023/lab2-vsai9/syn/rtl/fifo1_srama.sv'.
===============================================================================
|    Register Name    |   Type    | Width | Bus | MB | AR | AS | SR | SS | ST |
===============================================================================
|      wfull_reg      | Flip-flop |   1   |  N  | N  | Y  | N  | N  | N  | N  |
===============================================================================
Presto compilation completed successfully. (wptr_full_ADDRSIZE10)
#####################################################
proc insert_io { port side} {
  set this_io io_${side}_${port}
  if {  $side == "t"   } {
   if { [get_attribute [get_ports $port ] direction ] == "in" } {
    create_cell $this_io saed32io_wb_ss0p95v125c_2p25v/I1025_NS
   } else {
    create_cell $this_io saed32io_wb_ss0p95v125c_2p25v/D8I1025_NS
   }
  }
  if { $side == "b"  } {
   if { [get_attribute [get_ports $port ] direction ] == "in" } {
    create_cell $this_io saed32io_wb_ss0p95v125c_2p25v/I1025_NS
   } else {
    create_cell $this_io saed32io_wb_ss0p95v125c_2p25v/D8I1025_NS
   }
  }
  if {  $side == "r"  } {
   if { [get_attribute [get_ports $port ] direction ] == "in" } {
    create_cell $this_io saed32io_wb_ss0p95v125c_2p25v/I1025_NS
   } else {
    create_cell $this_io saed32io_wb_ss0p95v125c_2p25v/D8I1025_NS
   }
  }
  if { $side == "l"  } {
   if { [get_attribute [get_ports $port ] direction ] == "in" } {
    create_cell $this_io saed32io_wb_ss0p95v125c_2p25v/I1025_NS
   } else {
    create_cell $this_io saed32io_wb_ss0p95v125c_2p25v/D8I1025_NS
   }
  }
  set pins [ get_pins -of_obj [ get_net $port ] ]
  foreach_in i $pins { disconnect_net [get_net $port ] $i }
  set port_net [get_nets -quiet $port ]

  # If only a port is created, the related net is not created and connected to the port.  Do that here.
  if { [sizeof_collection $port_net ] == 0 } { 
      create_net $port 
      connect_net $port [get_ports $port ]
  }

  connect_net [get_net $port ]  $this_io/PADIO
  create_net ${this_io}_net
  foreach_in i $pins { connect_net ${this_io}_net $i }
  #DIN is input to IO_PAD
  #DOUT is output of IO_PAD
  #EN is the IO_PAD enable to output
  if { [get_attribute [get_ports $port ] direction ] == "in" } {
     #connect_net [get_nets  *Logic0* ] ${this_io}/EN 
     connect_net [get_nets  *Logic1* ] ${this_io}/R_EN 
     connect_net ${this_io}_net ${this_io}/DOUT
  } else {
     connect_net [get_nets  *Logic1* ] $this_io/EN 
     #connect_net [get_nets  *Logic0* ] $this_io/R_EN 
     connect_net ${this_io}_net $this_io/DIN
  }
}
####################################################
Error: could not open script file "../../fifo1_srama.add_ios.tcl" (CMD-015)
Warning: The specified replacement character (_) is conflicting with the specified allowed or restricted character.   (UCN-4)
if { [info exists synopsys_program_name ] && ($synopsys_program_name == "icc2_shell") } {
    puts " Creating ICC2 MCMM "
    create_mode func
    create_corner slow
    create_scenario -mode func -corner slow -name func_slow
    current_scenario func_slow
    set_operating_conditions ss0p75v125c
    read_parasitic_tech -tlup $tlu_dir/saed32nm_1p9m_Cmax.tluplus -layermap $tlu_dir/saed32nm_tf_itf_tluplus.map -name Cmax
    read_parasitic_tech -tlup $tlu_dir/saed32nm_1p9m_Cmin.tluplus -layermap $tlu_dir/saed32nm_tf_itf_tluplus.map -name Cmin
    set_parasitic_parameters -early_spec Cmax -early_temperature 125
    set_parasitic_parameters -late_spec Cmax -late_temperature 125
    #set_parasitic_parameters -early_spec 1p9m_Cmax -early_temperature 125 -corner default
    #set_parasitic_parameters -late_spec 1p9m_Cmax -late_temperature 125 -corner default

    #set_scenario_status  default -active false
    set_scenario_status func_slow -active true -hold true -setup true
}
set wclk_period 2
2
set rclk_period 2
2
#set wclk_period 1.12
#set rclk_period 1.12
set wclk2x_period [ expr $wclk_period / 2 ]
1
create_clock -name "wclk" -period $wclk_period  wclk
1
create_clock -name "rclk" -period $rclk_period rclk
1
#Add the new clock.  Make it 1/2 the wclk period since it is called wclk2x
create_clock -name "wclk2x" -period $wclk2x_period wclk2x
1
############################ Transition and Uncertainity Settings #########################################
set wclk2x_transition [expr $wclk2x_period * 0.1666 ]
0.1666
set rclk_transition [expr $rclk_period * 0.1666 ]
0.3332
set wclk_transition [expr $wclk_period * 0.1666 ]
0.3332
set wclk2x_uncertainity [expr $wclk2x_period * 0.1 ]
0.1
set rclk_uncertainity [expr $rclk_period * 0.1 ]
0.2
set wclk_uncertainity [expr $wclk_period * 0.1]
0.2
set_max_transition $wclk2x_transition [get_clocks wclk2x]
Warning: set_max_transition has been applied on clock objects without specifying -clock_path.  Constraint will be considered by both clock network pins and data pins launched by that clock. (OPT-1029)
1
set_max_transition $rclk_transition [get_clocks rclk]
Warning: set_max_transition has been applied on clock objects without specifying -clock_path.  Constraint will be considered by both clock network pins and data pins launched by that clock. (OPT-1029)
1
set_max_transition $wclk_transition [get_clocks wclk]
Warning: set_max_transition has been applied on clock objects without specifying -clock_path.  Constraint will be considered by both clock network pins and data pins launched by that clock. (OPT-1029)
1
set_clock_uncertainty -setup $wclk2x_uncertainity [get_clocks wclk2x]
1
set_clock_uncertainty -setup $rclk_uncertainity [get_clocks rclk]
1
set_clock_uncertainty -setup $wclk_uncertainity [get_clocks wclk]
1
set_clock_uncertainty -hold $wclk2x_uncertainity [get_clocks wclk2x]
1
set_clock_uncertainty -hold $rclk_uncertainity [get_clocks rclk]
1
set_clock_uncertainty -hold $wclk_uncertainity [get_clocks wclk]
1
###########################################################################################################
set_false_path -from [get_clocks wclk ] -to [get_clocks rclk]
1
set_false_path -from [get_clocks rclk ] -to [ get_clocks wclk]
1
# Add input/output delays in relation to related clocks
# Can tell the related clock by doing report_timing -group INPUTS  or -group OUTPUTS after using group_path
# External delay should be some percentage of clock period.
# Tune/relax if violating; most concerned about internal paths.
################# Defining input delay values #########################
set wclk2x_DELAY [expr $wclk2x_period / 2 ]
0
set rclk_DELAY [expr $rclk_period / 2 ]
1
set wclk_DELAY [expr $wclk_period / 2 ]
1
#################################################################
################# input delays definitions #########################
set_input_delay $rclk_DELAY -clock [get_clocks rclk] [get_ports rinc]
1
set_input_delay $wclk2x_DELAY -clock [get_clocks wclk2x] [get_ports wdata_in[0]]
1
set_input_delay $wclk2x_DELAY -clock [get_clocks wclk2x] [get_ports wdata_in[1]]
1
set_input_delay $wclk2x_DELAY -clock [get_clocks wclk2x] [get_ports wdata_in[2]]
1
set_input_delay $wclk2x_DELAY -clock [get_clocks wclk2x] [get_ports wdata_in[3]]
1
set_input_delay $wclk2x_DELAY -clock [get_clocks wclk2x] [get_ports wdata_in[4]]
1
set_input_delay $wclk2x_DELAY -clock [get_clocks wclk2x] [get_ports wdata_in[5]]
1
set_input_delay $wclk2x_DELAY -clock [get_clocks wclk2x] [get_ports wdata_in[6]]
1
set_input_delay $wclk2x_DELAY -clock [get_clocks wclk2x] [get_ports wdata_in[7]]
1
set_input_delay $wclk_DELAY -clock [get_clocks wclk] [get_ports winc]
1
##########################################################################
############### output delay definitions           ########################
set_output_delay $rclk_DELAY -clock [get_clocks rclk] [get_ports rdata[0]]
1
set_output_delay $rclk_DELAY -clock [get_clocks rclk] [get_ports rdata[1]]
1
set_output_delay $rclk_DELAY -clock [get_clocks rclk] [get_ports rdata[2]]
1
set_output_delay $rclk_DELAY -clock [get_clocks rclk] [get_ports rdata[3]]
1
set_output_delay $rclk_DELAY -clock [get_clocks rclk] [get_ports rdata[4]]
1
set_output_delay $rclk_DELAY -clock [get_clocks rclk] [get_ports rdata[5]]
1
set_output_delay $rclk_DELAY -clock [get_clocks rclk] [get_ports rdata[6]]
1
set_output_delay $rclk_DELAY -clock [get_clocks rclk] [get_ports rdata[7]]
1
set_output_delay $rclk_DELAY -clock [get_clocks rclk] [get_ports rempty]
1
set_output_delay $wclk_DELAY -clock [get_clocks wclk] [get_ports wfull]
1
##########################################################################
# I like set_driving_cell to a std cell from the library.  set_drive works to.
################## Driving Cell Definitions ##################################
set_driving_cell -lib_cell INVX2_RVT [get_ports rinc]
1
set_driving_cell -lib_cell INVX2_RVT [get_ports wdata_in[0]]
1
set_driving_cell -lib_cell INVX2_RVT [get_ports wdata_in[1]]
1
set_driving_cell -lib_cell INVX2_RVT [get_ports wdata_in[2]]
1
set_driving_cell -lib_cell INVX2_RVT [get_ports wdata_in[3]]
1
set_driving_cell -lib_cell INVX2_RVT [get_ports wdata_in[4]]
1
set_driving_cell -lib_cell INVX2_RVT [get_ports wdata_in[5]]
1
set_driving_cell -lib_cell INVX2_RVT [get_ports wdata_in[6]]
1
set_driving_cell -lib_cell INVX2_RVT [get_ports wdata_in[7]]
1
set_driving_cell -lib_cell INVX2_RVT [get_ports winc]
1
##########################################################################
# set_load
#################### Load Definitions #################################
set_load 1 [get_ports rdata[0]]
1
set_load 1 [get_ports rdata[1]]
1
set_load 1 [get_ports rdata[2]]
1
set_load 1 [get_ports rdata[3]]
1
set_load 1 [get_ports rdata[4]]
1
set_load 1 [get_ports rdata[5]]
1
set_load 1 [get_ports rdata[6]]
1
set_load 1 [get_ports rdata[7]]
1
set_load 1 [get_ports rempty]
1
set_load 1 [get_ports wfull]
1
##########################################################################
group_path -name INTERNAL -from [all_clocks] -to [all_clocks ]
1
group_path -name INPUTS -from [ get_ports -filter "direction==in&&full_name!~*clk*" ]
1
group_path -name OUTPUTS -to [ get_ports -filter "direction==out" ]
1
Current design is 'fifo1_srama'.
Information: Performing power optimization. (PWR-850)
Alib files are up-to-date.
Information: Choosing a test methodology will restrict the optimization of sequential cells. (UIO-12)
Information: Evaluating DesignWare library utilization. (UISN-27)

============================================================================
| DesignWare Building Block Library  |         Version         | Available |
============================================================================
| Basic DW Building Blocks           | Q-2019.12-DWBB_201912.3 |     *     |
| Licensed DW Building Blocks        | Q-2019.12-DWBB_201912.3 |     *     |
============================================================================

Information: Sequential output inversion is enabled.  SVF file must be used for formal verification. (OPT-1208)

Information: There are 65 potential problems in your design. Please run 'check_design' for more information. (LINT-99)

  Simplifying Design 'fifo1_srama'

Loaded alib file './alib-52/saed32rvt_ss0p95v125c.db.alib'
Information: State dependent leakage is now switched from on to off.

  Beginning Pass 1 Mapping
  ------------------------
  Processing 'fifomem_DATASIZE8_ADDRSIZE10'
  Processing 'wptr_full_ADDRSIZE10'
Information: Added key list 'DesignWare' to design 'wptr_full_ADDRSIZE10'. (DDB-72)
Information: In design 'wptr_full_ADDRSIZE10', the register 'wptr_reg_10_' is removed because it is merged to 'wbin_reg_10_'. (OPT-1215)
 Implement Synthetic for 'wptr_full_ADDRSIZE10'.
  Processing 'rptr_empty_ADDRSIZE10'
Information: Added key list 'DesignWare' to design 'rptr_empty_ADDRSIZE10'. (DDB-72)
Information: In design 'rptr_empty_ADDRSIZE10', the register 'rptr_reg_10_' is removed because it is merged to 'rbin_reg_10_'. (OPT-1215)
 Implement Synthetic for 'rptr_empty_ADDRSIZE10'.
  Processing 'fifo1_srama'
  Processing 'sync_w2r'
  Processing 'sync_r2w'

  Updating timing information
Information: Updating design information... (UID-85)
Information: The library cell 'PMT3_RVT' in the library 'saed32rvt_ss0p95v125c' is not characterized for internal power. (PWR-536)
Information: The library cell 'PMT2_RVT' in the library 'saed32rvt_ss0p95v125c' is not characterized for internal power. (PWR-536)
Information: The library cell 'PMT1_RVT' in the library 'saed32rvt_ss0p95v125c' is not characterized for internal power. (PWR-536)
Information: The library cell 'NMT3_RVT' in the library 'saed32rvt_ss0p95v125c' is not characterized for internal power. (PWR-536)
Information: The library cell 'NMT2_RVT' in the library 'saed32rvt_ss0p95v125c' is not characterized for internal power. (PWR-536)
Information: The library cell 'NMT1_RVT' in the library 'saed32rvt_ss0p95v125c' is not characterized for internal power. (PWR-536)
Information: The target library(s) contains cell(s), other than black boxes, that are not characterized for internal power. (PWR-24)
Information: Automatic shift-register identification is enabled for scan. Not all registers will be scan-replaced. (OPT-467)

Threshold voltage group cell usage:
>> saed32cell_svt 100.00%

  Beginning Mapping Optimizations  (Ultra High effort)
  -------------------------------
  Mapping Optimization (Phase 1)
  Mapping Optimization (Phase 2)

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:57  211332.1      0.01       0.0      29.7                           106302016.0000
    0:00:57  211327.7      0.03       0.1      29.7                           106120200.0000

Threshold voltage group cell usage:
>> saed32cell_svt 100.00%

  Beginning Constant Register Removal
  -----------------------------------

Threshold voltage group cell usage:
>> saed32cell_svt 100.00%

  Beginning Global Optimizations
  ------------------------------
  Numerical Synthesis (Phase 1)
  Numerical Synthesis (Phase 2)
  Global Optimization (Phase 1)
  Global Optimization (Phase 2)
  Global Optimization (Phase 3)
  Global Optimization (Phase 4)
  Global Optimization (Phase 5)
  Global Optimization (Phase 6)
  Global Optimization (Phase 7)
  Global Optimization (Phase 8)
  Global Optimization (Phase 9)
  Global Optimization (Phase 10)
  Global Optimization (Phase 11)
  Global Optimization (Phase 12)
  Global Optimization (Phase 13)
  Global Optimization (Phase 14)
  Global Optimization (Phase 15)
  Global Optimization (Phase 16)
  Global Optimization (Phase 17)
  Global Optimization (Phase 18)
  Global Optimization (Phase 19)
  Global Optimization (Phase 20)
  Global Optimization (Phase 21)
  Global Optimization (Phase 22)
  Global Optimization (Phase 23)
  Global Optimization (Phase 24)
  Global Optimization (Phase 25)
  Global Optimization (Phase 26)
  Global Optimization (Phase 27)
  Global Optimization (Phase 28)
  Global Optimization (Phase 29)
  Global Optimization (Phase 30)

Threshold voltage group cell usage:
>> saed32cell_svt 100.00%

  Beginning Isolate Ports
  -----------------------

Threshold voltage group cell usage:
>> saed32cell_svt 100.00%

  Beginning Delay Optimization
  ----------------------------
    0:00:57  211203.0      0.05       0.1      29.7                           72618552.0000
    0:00:58  211217.2      0.00       0.0      29.7                           75642512.0000
    0:00:58  211217.2      0.00       0.0      29.7                           75642512.0000
    0:00:58  211217.2      0.00       0.0      29.7                           75642512.0000

Threshold voltage group cell usage:
>> saed32cell_svt 100.00%
    0:00:58  211216.9      0.00       0.0      29.7                           75643904.0000
    0:00:58  211216.9      0.00       0.0      29.7                           75643904.0000

  Beginning WLM Backend Optimization
  --------------------------------------
    0:00:59  211204.5      0.00       0.0      29.7                           73963400.0000
    0:00:59  211204.5      0.00       0.0      29.7                           73963400.0000
    0:00:59  211204.5      0.00       0.0      29.7                           73963400.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000


  Beginning Design Rule Fixing  (max_capacitance)
  ----------------------------

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:59  211204.2      0.00       0.0      29.7                           73667208.0000
  Global Optimization (Phase 31)
  Global Optimization (Phase 32)
  Global Optimization (Phase 33)
    0:00:59  211220.5      0.00       0.0      24.0                           75246080.0000
    0:00:59  211220.5      0.00       0.0      24.0                           75246080.0000

Threshold voltage group cell usage:
>> saed32cell_svt 100.00%


  Beginning Leakage Power Optimization  (max_leakage_power 0)
  ------------------------------------

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:00:59  211220.5      0.00       0.0      24.0                           75246080.0000
  Global Optimization (Phase 34)
  Global Optimization (Phase 35)
  Global Optimization (Phase 36)
  Global Optimization (Phase 37)
  Global Optimization (Phase 38)
  Global Optimization (Phase 39)
  Global Optimization (Phase 40)
  Global Optimization (Phase 41)
  Global Optimization (Phase 42)
  Global Optimization (Phase 43)
  Global Optimization (Phase 44)
  Global Optimization (Phase 45)
  Global Optimization (Phase 46)
  Global Optimization (Phase 47)
    0:01:00  211212.4      0.00       0.0      24.0                           72565584.0000
    0:01:00  211216.2      0.00       0.0      24.0                           73177016.0000
    0:01:00  211216.2      0.00       0.0      24.0                           73177016.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000

                                  TOTAL                                                
   ELAPSED            WORST NEG   SETUP    DESIGN                              LEAKAGE 
    TIME      AREA      SLACK     COST    RULE COST         ENDPOINT            POWER  
  --------- --------- --------- --------- --------- ------------------------- ---------
    0:01:00  211215.7      0.00       0.0      24.0                           73045688.0000
    0:01:00  211215.2      0.00       0.0      24.0                           72867088.0000
    0:01:00  211216.2      0.00       0.0      24.0                           73154192.0000
    0:01:00  211216.2      0.00       0.0      24.0                           73154192.0000
    0:01:00  211215.9      0.00       0.0      24.0                           73075984.0000
    0:01:01  211216.4      0.00       0.0      24.0                           73164352.0000
    0:01:01  211216.4      0.00       0.0      24.0                           73443216.0000
    0:01:01  211216.4      0.00       0.0      24.0                           73443216.0000
    0:01:01  211216.4      0.00       0.0      24.0                           73443216.0000
    0:01:01  211216.4      0.00       0.0      24.0                           73443216.0000
    0:01:01  211216.4      0.00       0.0      24.0                           73443216.0000
    0:01:01  211214.1      0.00       0.0      24.0                           72115768.0000
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/io_std/db_nldm/saed32io_wb_ss0p95v125c_2p25v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/sram_lp/db_nldm/saed32sramlp_ss0p75v125c_i0p75v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/pll/db_nldm/saed32pll_ss0p95v125c_2p25v.db'
Loading db file '/pkgs/synopsys/2020/32_28nm/SAED32_EDK/lib/stdcell_rvt/db_nldm/saed32rvt_ss0p95v125c.db'


Note: Symbol # after min delay cost means estimated hold TNS across all active scenarios 


  Optimization Complete
  ---------------------
Information: State dependent leakage is now switched from off to on.
Information: Propagating switching activity (low effort zero delay simulation). (PWR-6)
Warning: Design has unannotated black box outputs. (PWR-428)
Writing verilog file '/u/sai9/ECE581-2023/lab2-vsai9/syn/outputs/fifo1_srama.dc.vg'.
Writing ddc file '../outputs/fifo1_srama.dc.ddc'.
1
dc_shell> pwd
/u/sai9/ECE581-2023/lab2-vsai9/syn/work
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> report_cell
 
****************************************
Report : cell
Design : fifo1_srama
Version: Q-2019.12-SP3
Date   : Tue Jan 24 18:48:19 2023
****************************************

Attributes:
    b - black box (unknown)
    h - hierarchical
    n - noncombinational
    p - parameterized
    r - removable
    u - contains unmapped logic

Cell                      Reference       Library             Area  Attributes
--------------------------------------------------------------------------------
fifomem                   fifomem_DATASIZE8_ADDRSIZE10    210012.543740
                                                                    b, h, p
rptr_empty                rptr_empty_ADDRSIZE10           387.061319
                                                                    h, n, p
sync_r2w                  sync_r2w                        178.917380
                                                                    h, n
sync_w2r                  sync_w2r                        178.917380
                                                                    h, n
wdata_reg_0_              SDFFARX1_RVT    saed32rvt_ss0p95v125c
                                                          9.149184  n
wdata_reg_1_              SDFFARX1_RVT    saed32rvt_ss0p95v125c
                                                          9.149184  n
wdata_reg_2_              SDFFARX1_RVT    saed32rvt_ss0p95v125c
                                                          9.149184  n
wdata_reg_3_              SDFFARX1_RVT    saed32rvt_ss0p95v125c
                                                          9.149184  n
wdata_reg_4_              SDFFARX1_RVT    saed32rvt_ss0p95v125c
                                                          9.149184  n
wdata_reg_5_              SDFFARX1_RVT    saed32rvt_ss0p95v125c
                                                          9.149184  n
wdata_reg_6_              SDFFARX1_RVT    saed32rvt_ss0p95v125c
                                                          9.149184  n
wdata_reg_7_              SDFFARX1_RVT    saed32rvt_ss0p95v125c
                                                          9.149184  n
wptr_full                 wptr_full_ADDRSIZE10            383.503304
                                                                    h, n, p
--------------------------------------------------------------------------------
Total 13 cells                                            211214.136597
1
dc_shell> help *gate*
 all_clock_gates      # create a collection of clock gating cells or pins
 apply_clock_gate_latency # Spread and annotate clock latencies on the existing clock gates
 propagate_constraints # propagate_constraints
 propagate_switching_activity # propagating power switching activity
 propagate_user_attributes # propagate_user_attributes
 remove_propagated_clock # remove_propagated_clock
 replace_clock_gates  # replace_clock_gates
 reset_clock_gate_latency # Remove clock latency from CG cells and reset values specified by set_clock_gate_latency
 set_clock_gate_latency # Specifies clock latency values to be applied to CG for each CG stage and fanout range
 set_preserve_clock_gate # set pwr_cg_preservation_type
 set_propagated_clock # set propagated_clock
 set_replace_clock_gates # set_replace_clock_gates
dc_shell> help *count*
Information: No commands matched '*count*'. (CMD-040)
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> get_cells -hierarchical
{sync_r2w/wq1_rptr_reg_10_ sync_r2w/wq1_rptr_reg_9_ sync_r2w/wq1_rptr_reg_8_ sync_r2w/wq1_rptr_reg_7_ sync_r2w/wq1_rptr_reg_6_ sync_r2w/wq1_rptr_reg_5_ sync_r2w/wq1_rptr_reg_4_ sync_r2w/wq1_rptr_reg_3_ sync_r2w/wq1_rptr_reg_2_ sync_r2w/wq1_rptr_reg_1_ sync_r2w/wq1_rptr_reg_0_ sync_r2w/U4 sync_r2w/U6 sync_r2w/U8 sync_r2w/U10 sync_r2w/U12 sync_r2w/U14 sync_r2w/U16 sync_r2w/U18 sync_r2w/U20 sync_r2w/U22 sync_r2w/U24 sync_r2w/wq2_rptr_reg_0_ sync_r2w/wq2_rptr_reg_1_ sync_r2w/wq2_rptr_reg_2_ sync_r2w/wq2_rptr_reg_3_ sync_r2w/wq2_rptr_reg_4_ sync_r2w/wq2_rptr_reg_5_ sync_r2w/wq2_rptr_reg_6_ sync_r2w/wq2_rptr_reg_7_ sync_r2w/wq2_rptr_reg_8_ sync_r2w/wq2_rptr_reg_9_ sync_r2w/wq2_rptr_reg_10_ sync_w2r/rq1_wptr_reg_10_ sync_w2r/rq1_wptr_reg_9_ sync_w2r/rq1_wptr_reg_8_ sync_w2r/rq1_wptr_reg_7_ sync_w2r/rq1_wptr_reg_6_ sync_w2r/rq1_wptr_reg_5_ sync_w2r/rq1_wptr_reg_4_ sync_w2r/rq1_wptr_reg_3_ sync_w2r/rq1_wptr_reg_2_ sync_w2r/rq1_wptr_reg_1_ sync_w2r/rq1_wptr_reg_0_ sync_w2r/U4 sync_w2r/U6 sync_w2r/U8 sync_w2r/U10 sync_w2r/U12 sync_w2r/U14 sync_w2r/U16 sync_w2r/U18 sync_w2r/U20 sync_w2r/U22 sync_w2r/U24 sync_w2r/rq2_wptr_reg_0_ sync_w2r/rq2_wptr_reg_1_ sync_w2r/rq2_wptr_reg_2_ sync_w2r/rq2_wptr_reg_3_ sync_w2r/rq2_wptr_reg_4_ sync_w2r/rq2_wptr_reg_5_ sync_w2r/rq2_wptr_reg_6_ sync_w2r/rq2_wptr_reg_7_ sync_w2r/rq2_wptr_reg_8_ sync_w2r/rq2_wptr_reg_9_ sync_w2r/rq2_wptr_reg_10_ fifomem/genblk1_0__U fifomem/genblk1_1__U fifomem/genblk1_2__U fifomem/genblk1_3__U fifomem/genblk1_4__U fifomem/genblk1_5__U fifomem/genblk1_6__U fifomem/genblk1_7__U fifomem/U3 fifomem/U4 fifomem/U5 fifomem/U6 fifomem/U7 fifomem/U8 fifomem/U9 fifomem/U10 fifomem/U11 fifomem/U12 fifomem/U13 fifomem/U14 fifomem/U15 fifomem/U16 fifomem/U17 fifomem/U18 fifomem/U19 fifomem/U20 fifomem/U21 fifomem/U22 fifomem/U23 fifomem/U24 fifomem/U25 fifomem/U26 fifomem/U27 fifomem/U28 ...}
dc_shell> sizeof_collection [get_cells -hierarchical]
338
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> get_path_groups
{OUTPUTS INTERNAL INPUTS wclk2x rclk wclk **default**}
dc_shell> all_clocks
{wclk rclk wclk2x}
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> man set_clock_latency
2.  Synopsys Commands                                        Command Reference
                               set_clock_latency

NAME
       set_clock_latency
              Specifies the clock latency for clocks, ports, or pins.

SYNTAX
       status set_clock_latency
               [-rise]
               [-fall]
               [-min]
               [-max]
               [-source]
               [-early]
               [-late]
               [-dynamic jitter]
               [-clock clock_list]
               delay
               object_list

   Data Types
       jitter          float
       clock_list      list
       delay           float
       object_list     collection

ARGUMENTS
       -rise  Applies  the  specified latency value only to rising transitions
              at register clock pins. By default, the latency value applies to
              both rising and falling transitions at register clock pins.

       -fall  Applies  the specified latency value only to falling transitions
              at register clock pins.

       -min   Applies the specified latency value only to the minimum  operat-
              ing condition. By default, the latency value applies to both the
              minimum and maximum operating conditions.

       -max   Applies the specified latency value only to the maximum  operat-
              ing condition.

       -source
              Specifies  the  source  (instead  of  network)  latency.  Source
              latency is the amount of delay from the ideal  waveform  to  the
              source object in the design, as defined by the create_clock com-
              mand.

              By default, the delay value applies to the network latency,  the
              amount of delay from the source object in the design to the reg-
              ister clock pin of the sequential device.  The total latency  is
              source latency plus network latency.

       -early Applies  the specified delay value only to early source latency,
              for example, to calculate the clock delay to the capture  regis-
              ter  in  a  setup  check.  This option can be used only with the
              -source option. By default, when you use the -source option, the
              specified  delay  value  applies  to  both early and late source
              latency.

       -late  Applies the specified delay value only to late  source  latency,
              for  example, to calculate the clock delay to the capture regis-
              ter in a hold check. This option  can  be  used  only  with  the
              -source option.

       -dynamic jitter
              Specifies the dynamic component of the clock latency, which rep-
              resents the amount of jitter in the original clock source.  This
              option can be used only with the -source option.

       -clock clock_list
              Applies  the  latency value with respect to the specified clock.
              This option lets you specify the relevant clock when you set the
              latency  on  a port or pin, and multiple clocks pass through the
              port or pin.

       delay  Specifies the clock latency value,  either  network  latency  by
              default, or source latency if you use the -source option.

       object_list
              Specifies  the clocks, ports, and pins on which to set the delay
              value.

DESCRIPTION
       This command specifies clock latency, which is the amount of delay  for
       a  clock signal reaching the clock pin of a sequential device.  You can
       specify two types of clock latency: network latency (the  default)  and
       source latency (by using the -source option).

       Clock  network latency is the time it takes a clock signal to propagate
       from the clock definition point (as defined by  the  create_clock  com-
       mand)  to  a  register  clock pin.  The rise and fall latencies are the
       latencies for rising and falling transitions at the register clock pin,
       respectively.   The  tool considers inversion of the clock waveform, if
       present in the clock network, to determine the rising or falling  sense
       at the register clock pin .

       Clock source latency (also called insertion delay) is the time it takes
       for a clock signal to propagate from its actual ideal  waveform  origin
       point  to  the clock definition point in the design.  You can use it to
       model off-chip clock latency when a clock  generation  circuit  is  not
       part  of  the  current design.  For generated clocks, you can use clock
       source latency to model the delay from the master clock to  the  gener-
       ated  clock definition point.  You can use the -early and -late options
       to specify early and late clock source latencies, respectively.

       The dynamic component of clock latency is the amount of jitter  in  the
       original clock source, which leads to a reduction in timing slack equal
       to the specified amount of time. You specify this amount by  using  the
       -dynamic option, which can be used only with the -source option. In the
       case of a zero-cycle path, in which the same clock edge  both  launches
       and  captures  data  in the path, jitter does not reduce the slack; the
       tool takes this into  account  in  any  clock  reconvergence  pessimism
       removal adjustment performed on the path.

       If  multiple  clocks  are allowed per object, you can specify the clock
       latency with respect to specific clocks by using the -clock option.  By
       using  multiple  set_clock_latency  commands, you can specify different
       latency values for different clocks that pass through the same ports or
       pins.

       By  default, the tool assumes ideal clocking, which means clocks have a
       specified network latency (from the set_clock_latency command) or  zero
       network latency by default.  Propagated clock network latency (from the
       set_propagated_clock command) is normally used after layout  and  final
       clock tree generation.  Specifying the ideal clock network latency pro-
       vides an estimate of the clock tree delay for before layout.

       You can specify clock source latency using the -source option for  both
       ideal  and  propagated  clocks.   The total clock latency at a register
       clock pin is the sum of the source latency and network latency.

       When you apply the set_clock_latency  command  to  pins  or  ports,  it
       affects  all register clock pins in the transitive fanout of the speci-
       fied pins or ports.  You can apply source latency only  to  clocks  and
       clock source pins.

       To   undo  the  effects  of  the  set_clock_latency  command,  use  the
       remove_clock_latency command.

       To report the clock network latency and clock source  latency  informa-
       tion, use the report_clock -skew command.

   Multicorner-Multimode Support
       This command applies to the current scenario only.

EXAMPLES
       The  following  example  specifies  a  rise  latency  of 1.2 and a fall
       latency of 0.9 for the clock named CLK1:

         prompt> set_clock_latency 1.2 -rise [get_clocks CLK1]
         prompt> set_clock_latency 0.9 -fall [get_clocks CLK1]

       The next example specifies an early  rise  and  an  early  fall  source
       latency  of  0.8, and a late rise and a late fall source latency of 0.9
       for the clock named CLK1:

         prompt> set_clock_latency 0.8 -source -early [get_clocks CLK1]
         prompt> set_clock_latency 0.9 -source -late  [get_clocks CLK1]

       The next example specifies an early and late source latency of 3 and  5
       respectively with dynamic components of 0.5.

         prompt> set_clock_latency 3 -source -early -dynamic 0.5 [get_clocks CLK1]
         prompt> set_clock_latency 5 -source -late  -dynamic 0.5 [get_clocks CLK1]

SEE ALSO
       create_clock(2)
       current_design(2)
       remove_clock_latency(2)
       report_clock(2)
       set_clock_gate_latency(2)
       set_clock_transition(2)
       set_clock_uncertainty(2)
       set_input_delay(2)
       set_propagated_clock(2)

                          Version Q-2019.12-SP3
            Copyright (c) 2020 Synopsys, Inc. All rights reserved.
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> man set_clock_latency
2.  Synopsys Commands                                        Command Reference
                               set_clock_latency

NAME
       set_clock_latency
              Specifies the clock latency for clocks, ports, or pins.

SYNTAX
       status set_clock_latency
               [-rise]
               [-fall]
               [-min]
               [-max]
               [-source]
               [-early]
               [-late]
               [-dynamic jitter]
               [-clock clock_list]
               delay
               object_list

   Data Types
       jitter          float
       clock_list      list
       delay           float
       object_list     collection

ARGUMENTS
       -rise  Applies  the  specified latency value only to rising transitions
              at register clock pins. By default, the latency value applies to
              both rising and falling transitions at register clock pins.

       -fall  Applies  the specified latency value only to falling transitions
              at register clock pins.

       -min   Applies the specified latency value only to the minimum  operat-
              ing condition. By default, the latency value applies to both the
              minimum and maximum operating conditions.

       -max   Applies the specified latency value only to the maximum  operat-
              ing condition.

       -source
              Specifies  the  source  (instead  of  network)  latency.  Source
              latency is the amount of delay from the ideal  waveform  to  the
              source object in the design, as defined by the create_clock com-
              mand.

              By default, the delay value applies to the network latency,  the
              amount of delay from the source object in the design to the reg-
              ister clock pin of the sequential device.  The total latency  is
              source latency plus network latency.

       -early Applies  the specified delay value only to early source latency,
              for example, to calculate the clock delay to the capture  regis-
              ter  in  a  setup  check.  This option can be used only with the
              -source option. By default, when you use the -source option, the
              specified  delay  value  applies  to  both early and late source
              latency.

       -late  Applies the specified delay value only to late  source  latency,
              for  example, to calculate the clock delay to the capture regis-
              ter in a hold check. This option  can  be  used  only  with  the
              -source option.

       -dynamic jitter
              Specifies the dynamic component of the clock latency, which rep-
              resents the amount of jitter in the original clock source.  This
              option can be used only with the -source option.

       -clock clock_list
              Applies  the  latency value with respect to the specified clock.
              This option lets you specify the relevant clock when you set the
              latency  on  a port or pin, and multiple clocks pass through the
              port or pin.

       delay  Specifies the clock latency value,  either  network  latency  by
              default, or source latency if you use the -source option.

       object_list
              Specifies  the clocks, ports, and pins on which to set the delay
              value.

DESCRIPTION
       This command specifies clock latency, which is the amount of delay  for
       a  clock signal reaching the clock pin of a sequential device.  You can
       specify two types of clock latency: network latency (the  default)  and
       source latency (by using the -source option).

       Clock  network latency is the time it takes a clock signal to propagate
       from the clock definition point (as defined by  the  create_clock  com-
       mand)  to  a  register  clock pin.  The rise and fall latencies are the
       latencies for rising and falling transitions at the register clock pin,
       respectively.   The  tool considers inversion of the clock waveform, if
       present in the clock network, to determine the rising or falling  sense
       at the register clock pin .

       Clock source latency (also called insertion delay) is the time it takes
       for a clock signal to propagate from its actual ideal  waveform  origin
       point  to  the clock definition point in the design.  You can use it to
       model off-chip clock latency when a clock  generation  circuit  is  not
       part  of  the  current design.  For generated clocks, you can use clock
       source latency to model the delay from the master clock to  the  gener-
       ated  clock definition point.  You can use the -early and -late options
       to specify early and late clock source latencies, respectively.

       The dynamic component of clock latency is the amount of jitter  in  the
       original clock source, which leads to a reduction in timing slack equal
       to the specified amount of time. You specify this amount by  using  the
       -dynamic option, which can be used only with the -source option. In the
       case of a zero-cycle path, in which the same clock edge  both  launches
       and  captures  data  in the path, jitter does not reduce the slack; the
       tool takes this into  account  in  any  clock  reconvergence  pessimism
       removal adjustment performed on the path.

       If  multiple  clocks  are allowed per object, you can specify the clock
       latency with respect to specific clocks by using the -clock option.  By
       using  multiple  set_clock_latency  commands, you can specify different
       latency values for different clocks that pass through the same ports or
       pins.

       By  default, the tool assumes ideal clocking, which means clocks have a
       specified network latency (from the set_clock_latency command) or  zero
       network latency by default.  Propagated clock network latency (from the
       set_propagated_clock command) is normally used after layout  and  final
       clock tree generation.  Specifying the ideal clock network latency pro-
       vides an estimate of the clock tree delay for before layout.

       You can specify clock source latency using the -source option for  both
       ideal  and  propagated  clocks.   The total clock latency at a register
       clock pin is the sum of the source latency and network latency.

       When you apply the set_clock_latency  command  to  pins  or  ports,  it
       affects  all register clock pins in the transitive fanout of the speci-
       fied pins or ports.  You can apply source latency only  to  clocks  and
       clock source pins.

       To   undo  the  effects  of  the  set_clock_latency  command,  use  the
       remove_clock_latency command.

       To report the clock network latency and clock source  latency  informa-
       tion, use the report_clock -skew command.

   Multicorner-Multimode Support
       This command applies to the current scenario only.

EXAMPLES
       The  following  example  specifies  a  rise  latency  of 1.2 and a fall
       latency of 0.9 for the clock named CLK1:

         prompt> set_clock_latency 1.2 -rise [get_clocks CLK1]
         prompt> set_clock_latency 0.9 -fall [get_clocks CLK1]

       The next example specifies an early  rise  and  an  early  fall  source
       latency  of  0.8, and a late rise and a late fall source latency of 0.9
       for the clock named CLK1:

         prompt> set_clock_latency 0.8 -source -early [get_clocks CLK1]
         prompt> set_clock_latency 0.9 -source -late  [get_clocks CLK1]

       The next example specifies an early and late source latency of 3 and  5
       respectively with dynamic components of 0.5.

         prompt> set_clock_latency 3 -source -early -dynamic 0.5 [get_clocks CLK1]
         prompt> set_clock_latency 5 -source -late  -dynamic 0.5 [get_clocks CLK1]

SEE ALSO
       create_clock(2)
       current_design(2)
       remove_clock_latency(2)
       report_clock(2)
       set_clock_gate_latency(2)
       set_clock_transition(2)
       set_clock_uncertainty(2)
       set_input_delay(2)
       set_propagated_clock(2)

                          Version Q-2019.12-SP3
            Copyright (c) 2020 Synopsys, Inc. All rights reserved.
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> 
dc_shell> set_clock_latency 0.1 [all_clocks]
1
dc_shell> exit

Memory usage for this session 198 Mbytes.
Memory usage for this session including child processes 198 Mbytes.
CPU usage for this session 15 seconds ( 0.00 hours ).
Elapsed time for this session 3167 seconds ( 0.88 hours ).

Thank you...

